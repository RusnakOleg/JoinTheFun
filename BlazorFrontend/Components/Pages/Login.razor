@page "/login"
@using BlazorFrontend.DTO.Login
@using BlazorFrontend.Services.Interfaces
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

@using Microsoft.AspNetCore.Components.Authorization
@using BlazorFrontend.Services.Auth



@rendermode InteractiveServer

<h3>Вхід</h3>

<EditForm Model="loginModel" OnValidSubmit="LoginUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Ім'я користувача:</label>
        <InputText @bind-Value="loginModel.Username" class="form-control" />
    </div>

    <div>
        <label>Пароль:</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>

    <button class="btn btn-success mt-2">Увійти</button>

    @if (!string.IsNullOrEmpty(message))
    {
        <p class="text-danger mt-2">@message</p>
    }
</EditForm>

@code {
    private LoginDto loginModel = new();
    private string message = "";

    private async Task LoginUser()
    {
        var result = await AuthService.LoginAsync(loginModel);
        if (result != null)
        {
            await LocalStorage.SetItemAsStringAsync("authToken", result.Token);

            // Оновлення стану авторизації
            if (AuthStateProvider is CustomAuthStateProvider customAuth)
            {
                await customAuth.NotifyUserAuthentication(result.Token);
            }

            NavigationManager.NavigateTo("/profile");
        }
        else
        {
            message = "Невірне ім'я користувача або пароль";
        }
    }

}
