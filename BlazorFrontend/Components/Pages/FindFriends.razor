@page "/friends"
@using BlazorFrontend.DTO.Profiles
@using BlazorFrontend.DTO.Interests
@using BlazorFrontend.Services.Interfaces

@inject IProfileService ProfileService
@inject IInterestService InterestService

@rendermode InteractiveServer

<h3 class="fw-bold text-center mb-4">Пошук друзів</h3>

<div class="d-flex justify-content-center mb-4">
    <div style="width: 100%; max-width: 700px;">
        <div class="card p-4 shadow-sm mb-4">
            <div class="row g-3 align-items-end">
                <!-- Місто -->
                <div class="col-md-6">
                    <label class="form-label">Місто</label>
                    <input @bind="searchCity" class="form-control" placeholder="Пошук за містом" />
                </div>

                <!-- Інтерес -->
                <div class="col-md-6">
                    <label class="form-label">Інтерес</label>
                    <select @bind="selectedInterestId" class="form-select">
                        <option value="0">Усі інтереси</option>
                        @foreach (var interest in interests)
                        {
                            <option value="@interest.InterestId">@interest.Name</option>
                        }
                    </select>
                </div>

                <!-- Кнопки -->
                <div class="col-12 d-flex justify-content-end">
                    <button class="btn btn-primary me-2" @onclick="Search">Шукати</button>
                    <button class="btn btn-secondary" @onclick="Reset">Скинути</button>
                </div>
            </div>
        </div>

        <!-- Результати -->
        @if (profiles == null)
        {
            <div class="text-center text-muted"><em>Профілі не завантажено</em></div>
        }
        else if (profiles.Count == 0)
        {
            <div class="text-center"><strong>Нічого не знайдено.</strong></div>
        }
        else
        {
            @foreach (var profile in profiles)
            {
                <a href="@($"/user-profile/{profile.UserId}")" class="text-decoration-none text-dark">
                    <div class="card p-3 mb-3 shadow-sm">
                        <div class="d-flex align-items-center">
                            <img src="@GetParsedImage(profile.AvatarUrl)" class="rounded-circle me-3" style="width: 64px; height: 64px; object-fit: cover;" />
                            <div>
                                <h5 class="mb-1">@profile.Username</h5>
                                <p class="mb-1 text-muted">@profile.City, @profile.Age</p>
                                <p class="mb-1">@profile.Description</p>
                                <p class="mb-0"><strong>Інтереси:</strong> @string.Join(", ", profile.Interests)</p>
                            </div>
                        </div>
                    </div>
                </a>
            }
        }
    </div>
</div>


@code {
    private string searchCity = "";
    private int selectedInterestId = 0;
    private List<ProfileDto>? profiles;
    private List<InterestDto> interests = new();

    protected override async Task OnInitializedAsync()
    {
        interests = await InterestService.GetAllAsync();
        profiles = await ProfileService.GetAllAsync();
    }

    private async Task Search()
    {
        if (!string.IsNullOrWhiteSpace(searchCity))
        {
            profiles = await ProfileService.GetByCityAsync(searchCity);
        }
        else if (selectedInterestId != 0)
        {
            profiles = await ProfileService.GetByInterestIdAsync(selectedInterestId);
        }
        else
        {
            profiles = await ProfileService.GetAllAsync();
        }
    }

    private async Task Reset()
    {
        searchCity = "";
        selectedInterestId = 0;
        profiles = await ProfileService.GetAllAsync();
    }

    private string GetParsedImage(string? base64)
    {
        if (string.IsNullOrEmpty(base64))
            return ""; // або якась заглушка

        return $"data:image/jpeg;base64,{base64}";
    }
}
